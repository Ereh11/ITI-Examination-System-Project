-- #INSERT INTO Course Table --
INSERT INTO Course 
VALUES (1, 'HTML', 18),
	   (2, 'CSS', 25),
	   (3, 'JS', 30),
	   (4, 'RWD', 15),
	   (5, 'C#', 30),
	   (6, 'XML', 20),
	   (7, 'Advanced JS', 20),
	   (8, 'UML', 20),
	   (9, 'SQL', 20),
	   (10, 'NodeJS', 20),
	   (11, 'MongoDB', 16),
	   (12, 'XHTML', 15),
	   (13, 'Advanced SQL', 18), 
	   (14, 'MySQL', 10),
	   (15, 'JAVA', 16),
	   (16, 'typescript', 15),
	   (17, 'Angular', 15),
	   (18, 'OOP', 20),
	   (19, 'LINQ', 16),
	   (20, 'EF', 15),
	   (21, 'C++', 16);

-- #INSERT INTO Department Table --
INSERT INTO Department
VALUES (1, 'PD', 'Cairo', '01001234567', NULL, NULL),
	   (2, 'OS', 'Giza', '01119876543', NULL, NULL),
	   (3, 'AI', 'Alexandria','01098765432', NULL, NULL),
	   (4, 'BI', 'Luxor', '01504321098', NULL, NULL),
	   (5, 'UI', 'Tanta','01285678901', NULL, NULL),
	   (6, 'UX', 'Aswan', '01127891234' , NULL, NULL),
	   (7, 'PD', 'Port Said', '01066543210', NULL, NULL),
	   (8, 'OS', 'Ismailia', '01553210987', NULL, NULL),
	   (9, 'AI', 'Mansoura', '01224567890', NULL, NULL),
	   (10, 'BI', 'Sohag', '01119876543', NULL, NULL);

-- #INSERT INTO Topic Table --
INSERT INTO Topic
VALUES  (1, 'tags', 1),
		(2, 'links', 1),
		(3, 'imgs', 1),
		(4, 'table', 1),
		(5, 'forms', 1),
		(6, 'lists', 1),
		(7, 'colors', 1),
		(8, 'styles', 1),
		(9, 'selectors', 2),
		(10, 'colors', 2),
		(11, 'bsckgrounds', 2),
		(12, 'comments', 2),
		(13, 'borders', 2),
		(14, 'box model', 2),
		(15, 'icons', 2),
		(16, 'overflow', 2),
		(17, 'displsying', 2),
		(18, 'variables', 3),
		(19, 'let', 3),
		(20, 'const', 3),
		(21, 'var', 3),
		(22, 'functions', 3),
		(23, 'arrayas', 3),
		(24, 'strings', 3),
		(25, 'dates', 3),
		(26, 'math', 3),
		(27, 'random', 3),
		(28, 'looping', 3),
		(29, 'mapping', 3),
		(30, 'Erros', 3),
		(31, 'arrow functions', 3),
		(32, 'flexbox', 4),
		(33, 'grid', 4),
		(34, 'templstes', 4),
		(35, 'medisquery', 4),
		(36, 'viewport', 4),
		(37, 'imsges', 4),
		(38, 'frameworks', 4),
		(39, 'variables', 5),
		(40, 'datatypes', 5),
		(41, 'operstors', 5),
		(42, 'math', 5),
		(43, 'strings', 5),
		(44, 'array', 5),
		(45, 'looping', 5),
		(46, 'casting', 5),
		(47, 'switch', 5),
		(48, 'tree', 6),
		(49, 'syntax', 6),
		(50, 'elements', 6),
		(51, 'attrs', 6),
		(52, 'parser', 6),
		(53, 'DOM', 6),
		(54, 'schema', 6),
		(55, 'validators', 6),
		(56, 'display', 6),
		(57, 'functiond', 7),
		(58, 'arrow functions', 7),
		(59, 'arrays', 7),
		(60, 'seq diagram', 8),
		(61, 'class diagram', 8),
		(62, 'usecase diagram', 8),
		(63, 'stored proc', 9),
		(64, 'functs', 9),
		(65, 'ERD', 9),
		(66, 'Routes', 10),
		(67, 'models', 10),
		(68, 'schemas', 10),
		(69, 'schemas', 11),
		(70, 'crud', 11),
		(71, 'initialization', 11),
		(72, 'authurization', 11),
		(73, 'xyz', 12),
		(74, 'abc', 12),
		(75, 'DML', 12),
		(76, 'PROC', 13),
		(77, 'FUNC', 13),
		(78, 'CURSOR', 13),
		(79, 'VARS', 14),
		(80, 'Views', 14),
		(81, 'Storeds', 14); 

-- #INSERT INTO Student Table --
INSERT INTO Student(std_id, std_fname, std_lname, city, street, phone, std_DoB, email, passowrd, dept_id)
VALUES  (1, 'Ahmed', 'Ali', 'Cairo', 'Street 1', 01000100235, CAST('2000-01-15' AS Date), 'ahmed.ali123@example.com', 'password1', 1),
		(2, 'Sara', 'Mohamed', 'Alexandria', 'Street 2', 01007890235, CAST('1998-05-23' AS Date), 'sara.mohamed456@example.com', 'password2', 2),
		(3, 'Mohamed', 'Hassan', 'Giza', 'Street 3', 01111310235, CAST('2002-10-30' AS Date), 'mohamed.hassan789@example.com', 'password3', 3),
		(4, 'Mona', 'Fathi', 'Tanta', 'Street 4', 01000019621, CAST('2001-08-17' AS Date), 'mona.fathi101@example.com', 'password4', 4),
		(5, 'Khaled', 'Said', 'Fayoum', 'Street 5', 01000963235, CAST('1999-11-25' AS Date), 'khaled.said112@example.com', 'password5', 5),
		(6, 'Rana', 'Ibrahim', 'Minya', 'Street 6', 01269810235, CAST('2003-04-19' AS Date), 'rana.ibrahim223@example.com', 'password6', 6),
		(7, 'Omar', 'Tariq', 'Sohag', 'Street 7', 01590010235, CAST('1998-07-03' AS Date), 'omar.tariq334@example.com', 'password7', 7),
		(8, 'Yasmine', 'Ahmed', 'Aswan', 'Street 8', 01005610235, CAST('2004-12-05' AS Date), 'yasmine.ahmed445@example.com', 'password8', 8),
		(9, 'Fayez', 'Khalil', 'Sharm El Sheikh', 'Street 9', 01260010235, CAST('2000-09-12' AS Date), 'fayez.khalil556@example.com', 'password9', 9),
		(10, 'Mariam', 'Mahmoud', 'Luxor', 'Street 10', 01000010235, CAST('2001-02-28' AS Date), 'mariam.mahmoud667@example.com', 'password10', 10),
		(11, 'Ali', 'Abdelrahman', 'Cairo', 'Street 11', 01010011001, CAST('2001-06-10' AS Date), 'ali.abdelrahman111@example.com', 'password11', 1),
		(12, 'Nour', 'Mahmoud', 'Alexandria', 'Street 12', 01110011002, CAST('2000-03-15' AS Date), 'nour.mahmoud112@example.com', 'password12', 2),
		(13, 'Hassan', 'Rashid', 'Giza', 'Street 13', 01210011003, CAST('2002-09-09' AS Date), 'hassan.rashid113@example.com', 'password13', 3),
		(14, 'Reem', 'Ahmed', 'Tanta', 'Street 14', 01510011004, CAST('2001-11-22' AS Date), 'reem.ahmed114@example.com', 'password14', 4),
		(15, 'Ziad', 'Tarek', 'Fayoum', 'Street 15', 01020011005, CAST('2003-05-13' AS Date), 'ziad.tarek115@example.com', 'password15', 5),
		(16, 'Salma', 'Ibrahim', 'Minya', 'Street 16', 01130011006, CAST('1999-08-24' AS Date), 'salma.ibrahim116@example.com', 'password16', 6),
		(17, 'Youssef', 'Mohamed', 'Sohag', 'Street 17', 01240011007, CAST('2002-01-18' AS Date), 'youssef.mohamed117@example.com', 'password17', 7),
		(18, 'Laila', 'Ali', 'Aswan', 'Street 18', 01550011008, CAST('2000-07-07' AS Date), 'laila.ali118@example.com', 'password18', 8),
		(19, 'Moez', 'Abdelaziz', 'Sharm El Sheikh', 'Street 19', 01060011009, CAST('2003-11-30' AS Date), 'moez.abdelaziz119@example.com', 'password19', 9),
		(20, 'Tamer', 'Khaled', 'Luxor', 'Street 20', 01170011010, CAST('2004-02-16' AS Date), 'tamer.khaled120@example.com', 'password20', 10),
		(21, 'Sami', 'Ahmed', 'Cairo', 'Street 21', 01280011011, CAST('1999-12-01' AS Date), 'sami.ahmed121@example.com', 'password21', 1),
		(22, 'Nadia', 'Fathi', 'Alexandria', 'Street 22', 01590011012, CAST('2001-09-14' AS Date), 'nadia.fathi122@example.com', 'password22', 2),
		(23, 'Ahmed', 'Khalil', 'Giza', 'Street 23', 01091011013, CAST('2003-06-10' AS Date), 'ahmed.khalil123@example.com', 'password23', 3),
		(24, 'Mariam', 'Tariq', 'Tanta', 'Street 24', 0111011014, CAST('2002-03-25' AS Date), 'mariam.tariq124@example.com', 'password24', 4),
		(25, 'Omar', 'Abdelrahman', 'Fayoum', 'Street 25', 0122011015, CAST('2001-10-05' AS Date), 'omar.abdelrahman125@example.com', 'password25', 5),
		(26, 'Samah', 'Ibrahim', 'Minya', 'Street 26', 0153011016, CAST('2000-04-14' AS Date), 'samah.ibrahim126@example.com', 'password26', 6),
		(27, 'Khaled', 'Rashid', 'Sohag', 'Street 27', 01040211017, CAST('2003-12-21' AS Date), 'khaled.rashid127@example.com', 'password27', 7),
		(28, 'Amina', 'Ali', 'Aswan', 'Street 28', 01150311018, CAST('2002-08-17' AS Date), 'amina.ali128@example.com', 'password28', 8),
		(29, 'Mohammed', 'Tarek', 'Sharm El Sheikh', 'Street 29', 01260411019, CAST('2000-06-30' AS Date), 'mohammed.tarek129@example.com', 'password29', 9),
		(30, 'Sara', 'Abdelaziz', 'Luxor', 'Street 30', 01570511020, CAST('2001-04-23' AS Date), 'sara.abdelaziz130@example.com', 'password30', 10),
		(31, 'Kareem', 'Fathi', 'Cairo', 'Street 31', 01080611021, CAST('2003-09-10' AS Date), 'kareem.fathi131@example.com', 'password31', 1),
		(32, 'Nour', 'Said', 'Alexandria', 'Street 32', 01190711022, CAST('2002-01-29' AS Date), 'nour.said132@example.com', 'password32', 2),
		(33, 'Ali', 'Mohamed', 'Giza', 'Street 33', 01200811023, CAST('2001-11-04' AS Date), 'ali.mohamed133@example.com', 'password33', 3),
		(34, 'Lina', 'Rashid', 'Tanta', 'Street 34', 01510911024, CAST('2004-01-21' AS Date), 'lina.rashid134@example.com', 'password34', 4),
		(35, 'Maha', 'Abdelrahman', 'Fayoum', 'Street 35', 01020911025, CAST('2002-07-16' AS Date), 'maha.abdelrahman135@example.com', 'password35', 5),
		(36, 'Mahmoud', 'Khaled', 'Minya', 'Street 36', 01131111026, CAST('2003-03-11' AS Date), 'mahmoud.khaled136@example.com', 'password36', 6),
		(37, 'Rania', 'Tariq', 'Sohag', 'Street 37', 01241211027, CAST('2000-12-15' AS Date), 'rania.tariq137@example.com', 'password37', 7),
		(38, 'Hassan', 'Fathi', 'Aswan', 'Street 38', 01551311028, CAST('2002-10-10' AS Date), 'hassan.fathi138@example.com', 'password38', 8),
		(39, 'Youssef', 'Said', 'Sharm El Sheikh', 'Street 39', 01061411029, CAST('2004-03-05' AS Date), 'youssef.said139@example.com', 'password39', 9),
		(41, 'Nour', 'Ahmed', 'Cairo', 'Street 41', 01023456789, CAST('2000-05-14' AS Date), 'nour.ahmed41@example.com', 'password41', 4),
		(42, 'Youssef', 'Ali', 'Alexandria', 'Street 42', 01134567890, CAST('2001-03-08' AS Date), 'youssef.ali42@example.com', 'password42', 5),
		(43, 'Dina', 'Samy', 'Giza', 'Street 43', 01212345678, CAST('1999-09-21' AS Date), 'dina.samy43@example.com', 'password43', 6),
		(44, 'Amira', 'Hassan', 'Sharm El Sheikh', 'Street 44', 01034567890, CAST('2002-11-11' AS Date), 'amira.hassan44@example.com', 'password44', 7),
		(45, 'Mohamed', 'Abdallah', 'Cairo', 'Street 45', 01123456789, CAST('2003-01-05' AS Date), 'mohamed.abdallah45@example.com', 'password45', 8),
		(46, 'Mona', 'Youssef', 'Giza', 'Street 46', 01512345678, CAST('2001-07-25' AS Date), 'mona.youssef46@example.com', 'password46', 9),
		(47, 'Tamer', 'Hossam', 'Cairo', 'Street 47', 01234567890, CAST('2002-02-12' AS Date), 'tamer.hossam47@example.com', 'password47', 4),
		(48, 'Sara', 'Ibrahim', 'Alexandria', 'Street 48', 01098765432, CAST('2000-06-20' AS Date), 'sara.ibrahim48@example.com', 'password48', 5),
		(49, 'Fady', 'Gad', 'Mansoura', 'Street 49', 01156789012, CAST('2003-04-10' AS Date), 'fady.gad49@example.com', 'password49', 6),
		(50, 'Rania', 'Shahin', 'Cairo', 'Street 50', 01223456789, CAST('2001-01-17' AS Date), 'rania.shahin50@example.com', 'password50', 7),
		(51, 'Nashwa', 'Khalil', 'Sharm El Sheikh', 'Street 51', 01087654321, CAST('2003-08-08' AS Date), 'nashwa.khalil51@example.com', 'password51', 8),
		(52, 'Ahmed', 'Salah', 'Cairo', 'Street 52', 01187654321, CAST('2002-12-22' AS Date), 'ahmed.salah52@example.com', 'password52', 9),
		(53, 'Hana', 'Mahmoud', 'Alexandria', 'Street 53', 01245678901, CAST('2001-04-05' AS Date), 'hana.mahmoud53@example.com', 'password53', 10),
		(54, 'Moustafa', 'Gamal', 'Giza', 'Street 54', 01012345678, CAST('2000-09-30' AS Date), 'moustafa.gamal54@example.com', 'password54', 1),
		(55, 'Heba', 'Taha', 'Mansoura', 'Street 55', 01176543210, CAST('2003-06-18' AS Date), 'heba.taha55@example.com', 'password55', 2),
		(56, 'Khaled', 'Rashid', 'Cairo', 'Street 56', 01265432109, CAST('2001-05-11' AS Date), 'khaled.rashid56@example.com', 'password56', 3),
		(57, 'Mariam', 'Salem', 'Alexandria', 'Street 57', 01034567890, CAST('2002-01-25' AS Date), 'mariam.salem57@example.com', 'password57', 4),
		(58, 'Mahmoud', 'Elhamy', 'Giza', 'Street 58', 01543210987, CAST('2000-04-17' AS Date), 'mahmoud.elhamy58@example.com', 'password58', 5),
		(59, 'Yara', 'Sami', 'Cairo', 'Street 59', 01298765432, CAST('2003-03-01' AS Date), 'yara.sami59@example.com', 'password59', 6),
		(60, 'Osman', 'Fathi', 'Sharm El Sheikh', 'Street 60', 01065432109, CAST('2001-11-09' AS Date), 'osman.fathi60@example.com', 'password60', 7),
		(61, 'Mona', 'Soliman', 'Mansoura', 'Street 61', 01123456789, CAST('2002-08-12' AS Date), 'mona.soliman61@example.com', 'password61', 8),
		(62, 'Ali', 'Mahmoud', 'Alexandria', 'Street 62', 01098765432, CAST('2000-10-06' AS Date), 'ali.mahmoud62@example.com', 'password62', 9),
		(63, 'Laila', 'Sherif', 'Giza', 'Street 63', 01145678901, CAST('2003-12-15' AS Date), 'laila.sherif63@example.com', 'password63', 10),
		(64, 'Fayza', 'Hassan', 'Cairo', 'Street 64', 01578901234, CAST('2002-04-20' AS Date), 'fayza.hassan64@example.com', 'password64', 1),
		(65, 'Sami', 'Kamal', 'Sharm El Sheikh', 'Street 65', 01023234567, CAST('2000-07-01' AS Date), 'sami.kamal65@example.com', 'password65', 2);
-- #INSERT INTO Instructor Table --
INSERT INTO Instructor
VALUES  (1, 'Hussien', 'Ayman', 'Mit Ghamr', 'Elgalaa', 01023465789, CAST('1998-12-30' AS Date), 'bernadinehyde@valpreal.com', 'password123', 15000.0000, CAST('2022-12-30' AS Date), 3),
		(2, 'Sara', 'Aly', 'Mansoura', 'Elmadrasa St', 01123487890, CAST('1995-11-16' AS Date), 'josephineweber@hivedom.com', 'password123', 12000.0000, CAST('2015-11-16' AS Date), 4),
		(3, 'Omnia', 'Abdullah', 'Fayoum', 'ElSayad St', 01023567891, CAST('1997-11-02' AS Date), 'solisblackwell@eternis.com', 'password123', 11000.0000, CAST('2018-11-02' AS Date), 5),
		(4, 'Essam', 'Ibrahim', 'Mansoura', 'Nozha', 01041234567, CAST('1996-01-02' AS Date), 'chrystalguy@norali.com', 'password123', 16000.0000, CAST('2021-01-02' AS Date), 6),
		(5, 'Alaa', 'Abdulrahman', 'Sohag', 'ElSayad St', 01025678901, CAST('1999-08-26' AS Date), 'myrnagrimes@pulze.com', 'password123', 13000.0000, CAST('2017-08-26' AS Date), 7),
		(6, 'Sara', 'Mostafa', 'Zagazig', 'Tes3een', 01029876543, CAST('1998-05-18' AS Date), 'mitchellcash@imkan.com', 'password123', 15000.0000, CAST('2020-05-18' AS Date), 8),
		(7, 'Hussien', 'Mostafa', 'Minya', 'Elmadrasa St', 01054321098, CAST('1997-02-08' AS Date), 'samanthaedwards@collaire.com', 'password123', 14000.0000, CAST('2023-02-08' AS Date), 9),
		(8, 'Ahmed', 'Ahmed', 'Cairo', 'ElSha3bia', 01005432109, CAST('1995-01-15' AS Date), 'christiehancock@phuel.com', 'password123', 15500.0000, CAST('2020-01-15' AS Date), 10),
		(9, 'Sara', 'Ayman', 'Mit Ghamr', 'Elmadrasa St', 01056789101, CAST('1999-09-10' AS Date), 'schultzryan@signity.com', 'password123', 11000.0000, CAST('2015-09-10' AS Date), 2),
		(10, 'Tamer', 'Salem', 'Alexandria', 'ElGalaa', 01023456890, CAST('1998-07-12' AS Date), 'tamer.salem@edu.com', 'password123', 12500.0000, CAST('2022-07-12' AS Date), 1),
		(11, 'Mona', 'Ali', 'Cairo', 'ElMaadi', 01034567892, CAST('1997-03-24' AS Date), 'mona.ali@university.com', 'password123', 13000.0000, CAST('2021-03-24' AS Date), 2),
		(12, 'Ahmed', 'Youssef', 'Giza', 'ElTahrir St', 01045678901, CAST('1999-11-10' AS Date), 'ahmed.youssef@science.com', 'password123', 14500.0000, CAST('2020-11-10' AS Date), 3),
		(13, 'Rania', 'Mahmoud', 'Tanta', 'ElSadr', 01056789012, CAST('1996-08-16' AS Date), 'rania.mahmoud@univ.com', 'password123', 16000.0000, CAST('2021-08-16' AS Date), 4),
		(14, 'Yassir', 'Fathy', 'Ismailia', 'ElMaidan', 01067890123, CAST('1998-04-02' AS Date), 'yassir.fathy@school.edu', 'password123', 12000.0000, CAST('2022-04-02' AS Date), 5),
		(15, 'Fatma', 'Gamal', 'Assiut', 'ElNozha', 01078901234, CAST('1995-02-28' AS Date), 'fatma.gamal@edu.com', 'password123', 13500.0000, CAST('2020-02-28' AS Date), 6),
		(16, 'Hossam', 'Sayed', 'Port Said', 'ElRaml', 01089012345, CAST('1999-06-18' AS Date), 'hossam.sayed@institute.com', 'password123', 14000.0000, CAST('2021-06-18' AS Date), 7),
		(17, 'Samah', 'Salah', 'Beni Suef', 'ElQudama', 01090123456, CAST('1997-05-22' AS Date), 'samah.salah@acad.com', 'password123', 12500.0000, CAST('2022-05-22' AS Date), 8),
		(18, 'Amr', 'Moustafa', 'Fayoum', 'ElTahrir', 01101234567, CAST('1999-12-05' AS Date), 'amr.moustafa@univ.com', 'password123', 15000.0000, CAST('2020-12-05' AS Date), 9),
		(19, 'Mariam', 'Hussein', 'Mansoura', 'ElShams', 01112345678, CAST('1996-10-30' AS Date), 'mariam.hussein@edu.com', 'password123', 16000.0000, CAST('2021-10-30' AS Date), 10),
		(20, 'Karim', 'Hassan', 'Giza', 'ElNasr', 01123456789, CAST('1998-01-20' AS Date), 'karim.hassan@school.edu', 'password123', 17000.0000, CAST('2022-01-20' AS Date), 1),
		(21, 'Maged', 'Sayed', 'Aswan', 'ElQalyub', 01134567890, CAST('1997-09-11' AS Date), 'maged.sayed@univ.com', 'password123', 12500.0000, CAST('2020-09-11' AS Date), 2),
		(22, 'Nada', 'Gaber', 'Alexandria', 'ElMontaza', 01145678901, CAST('1996-07-07' AS Date), 'nada.gaber@edu.com', 'password123', 13000.0000, CAST('2021-07-07' AS Date), 3),
		(23, 'Mohamed', 'Mansour', 'Cairo', 'ElZohour', 01156789012, CAST('1999-03-03' AS Date), 'mohamed.mansour@university.com', 'password123', 14000.0000, CAST('2020-03-03' AS Date), 4),
		(24, 'Layla', 'Fouad', 'Suez', 'ElRiyad', 01167890123, CAST('1997-04-25' AS Date), 'layla.fouad@institute.com', 'password123', 15000.0000, CAST('2021-04-25' AS Date), 5),
		(25, 'Shady', 'Abdullah', 'Cairo', 'ElAbbasia', 01178901234, CAST('1998-02-14' AS Date), 'shady.abdullah@edu.com', 'password123', 12000.0000, CAST('2022-02-14' AS Date), 6),
		(26, 'Hala', 'Khaled', 'Luxor', 'ElGomhouriya', 01189012345, CAST('1996-05-17' AS Date), 'hala.khaled@school.edu', 'password123', 13500.0000, CAST('2020-05-17' AS Date), 7),
		(27, 'Mona', 'Ezzat', 'Damietta', 'ElShorouk', 01190123456, CAST('1999-08-23' AS Date), 'mona.ezzat@edu.com', 'password123', 14500.0000, CAST('2021-08-23' AS Date), 8),
		(28, 'Samer', 'Ashraf', 'Beni Suef', 'ElMasara', 01201234567, CAST('1997-12-12' AS Date), 'samer.ashraf@univ.com', 'password123', 12500.0000, CAST('2022-12-12' AS Date), 9),
		(29, 'Ramy', 'Mohamed', 'Sharm El Sheikh', 'ElRiyad', 01212345678, CAST('1999-07-14' AS Date), 'ramy.mohamed@edu.com', 'password123', 16000.0000, CAST('2020-07-14' AS Date), 10),
		(30, 'Karim', 'Magdy', 'Port Said', 'ElMidan', 01223456789, CAST('1996-09-01' AS Date), 'karim.magdy@university.com', 'password123', 17000.0000, CAST('2021-09-01' AS Date), 1);

-- #INSERT INTO Exam Table --
INSERT INTO Exam(exm_id, exm_name, exm_model, duration, crs_id)
VALUES	(1, 'Introduction to Programming', 1, 120, 1),
		(2, 'Data Structures and Algorithms', 2, 180, 2),
		(3, 'Object-Oriented Programming', 3, 150, 3),
		(4, 'Database Management Systems', 2, 200, 4),
		(5, 'Operating Systems', 4, 180, 5),
		(6, 'Computer Networks', 1, 120, 6),
		(7, 'Software Engineering', 3, 150, 7),
		(8, 'Discrete Mathematics', 2, 180, 8),
		(9, 'Web Development', 1, 120, 9),
		(10, 'Mobile Application Development', 4, 180, 10),
		(11, 'Cloud Computing', 2, 150, 11),
		(12, 'Machine Learning', 3, 180, 12),
		(13, 'Artificial Intelligence', 1, 120, 13),
		(14, 'Computer Graphics', 4, 200, 14),
		(15, 'Compiler Design', 3, 180, 15),
		(16, 'Computer Vision', 1, 150, 16),
		(17, 'Cybersecurity', 2, 180, 17),
		(18, 'Big Data Analysis', 4, 150, 18),
		(19, 'Human-Computer Interaction', 3, 120, 19),
		(20, 'Natural Language Processing', 2, 180, 20);

-- #INSERT Question Exam Table --
INSERT INTO Question (ques_id, content, answer, type)
VALUES	(1, 'Is 2+2 equal to 4?', 'True', 'True&False'),
		(2, 'What is the capital of France?', 'Paris', 'MCQ'),
		(3, 'Is Python a programming language?', 'True', 'True&False'),
		(4, 'Which of the following is a programming language?', 'C', 'MCQ'),
		(5, 'Is 5 > 3?', 'True', 'True&False'),
		(6, 'Is Java a statically typed language?', 'True', 'True&False'),
		(7, 'Which language is used for web development?', 'JavaScript', 'MCQ'),
		(8, 'Is 10% of 1000 equal to 100?', 'False', 'True&False'),
		(9, 'Which of the following is a markup language?', 'HTML', 'MCQ'),
		(10, 'Is SQL used for querying databases?', 'True', 'True&False'),
		(11, 'Which of these is an object-oriented programming language?', 'Java', 'MCQ'),
		(12, 'Is 20 < 10?', 'False', 'True&False'),
		(13, 'Which language is known as the "mother of all languages"?', 'C', 'MCQ'),
		(14, 'Is CSS used to style webpages?', 'True', 'True&False'),
		(15, 'Which of these is used for styling a webpage?', 'CSS', 'MCQ'),
		(16, 'Is 15 > 20?', 'False', 'True&False'),
		(17, 'Which of the following is a database query language?', 'SQL', 'MCQ'),
		(18, 'Is Ruby a programming language?', 'True', 'True&False'),
		(19, 'Which of these is a mobile app development language?', 'Kotlin', 'MCQ'),
		(20, 'Is HTML used for creating webpages?', 'True', 'True&False'),
		(21, 'What does CSS stand for?', 'Cascading Style Sheets', 'MCQ'),
		(22, 'Which programming language is known for its use in Artificial Intelligence?', 'Python', 'MCQ'),
		(23, 'Is HTML a programming language?', 'False', 'True&False'),
		(24, 'Which of these is not a programming language?', 'HTML', 'MCQ'),
		(25, 'Is Python dynamically typed?', 'True', 'True&False'),
		(26, 'What does OOP stand for?', 'Object-Oriented Programming', 'MCQ'),
		(27, 'Which of the following is an interpreted language?', 'Python', 'MCQ'),
		(28, 'Is C# primarily used for web development?', 'False', 'True&False'),
		(29, 'Which data structure uses FIFO (First In, First Out)?', 'Queue', 'MCQ'),
		(30, 'What is the main purpose of the Stack data structure?', 'To store data in Last In, First Out order', 'MCQ'),
		(31, 'Which of the following is a key characteristic of functional programming?', 'Immutability', 'MCQ'),
		(32, 'Is Java platform-independent?', 'True', 'True&False'),
		(33, 'Which of these is a low-level programming language?', 'Assembly', 'MCQ'),
		(34, 'Which programming language is most commonly used for machine learning?', 'Python', 'MCQ'),
		(35, 'Is recursion a programming technique used in functional programming?', 'True', 'True&False'),
		(36, 'Which of these is used for front-end web development?', 'JavaScript', 'MCQ'),
		(37, 'Is SQL a programming language?', 'False', 'True&False'),
		(38, 'Which of the following is a sorting algorithm?', 'QuickSort', 'MCQ'),
		(39, 'Which data structure is used in a HashMap?', 'Hash Table', 'MCQ'),
		(40, 'Is C++ a multi-paradigm programming language?', 'True', 'True&False'),
		(41, 'Which of the following is a markup language?', 'HTML', 'MCQ'),
		(42, 'Which programming language is known for its use in web development?', 'JavaScript', 'MCQ'),
		(43, 'Is C# used for developing mobile applications?', 'True', 'True&False'),
		(44, 'What is the primary purpose of an operating system?', 'Manage hardware and software resources', 'MCQ'),
		(45, 'Is Python interpreted or compiled?', 'Interpreted', 'True&False'),
		(46, 'What is the full form of IDE?', 'Integrated Development Environment', 'MCQ'),
		(47, 'Which programming language is best known for its use in system programming?', 'C', 'MCQ'),
		(48, 'What is the basic unit of data in C programming?', 'Variable', 'MCQ'),
		(49, 'Which data structure is used for implementing recursive algorithms?', 'Stack', 'MCQ'),
		(50, 'Which of these is not a programming paradigm?', 'Imperative', 'MCQ'),
		(51, 'Is C++ a procedural language?', 'True', 'True&False'),
		(52, 'Which of these is used for building Android apps?', 'Java', 'MCQ'),
		(53, 'Is JavaScript the same as Java?', 'False', 'True&False'),
		(54, 'Which of these is a function in Python to get the length of an object?', 'len()', 'MCQ'),
		(55, 'Which programming language is widely used for backend web development?', 'Node.js', 'MCQ'),
		(56, 'What does the term API stand for?', 'Application Programming Interface', 'MCQ'),
		(57, 'Which of these is an example of a high-level language?', 'Python', 'MCQ'),
		(58, 'Which is the first step in the software development lifecycle?', 'Requirement gathering', 'MCQ'),
		(59, 'Is Ruby an object-oriented programming language?', 'True', 'True&False'),
		(60, 'Which sorting algorithm has the best average time complexity?', 'Merge Sort', 'MCQ'),
		(61, 'What does "SQL" stand for?', 'Structured Query Language', 'MCQ'),
		(62, 'Which of the following is a functional programming language?', 'Haskell', 'MCQ'),
		(63, 'Is Java a purely object-oriented programming language?', 'False', 'True&False'),
		(64, 'Which of the following languages is primarily used for machine learning?', 'Python', 'MCQ'),
		(65, 'What is the purpose of the "this" keyword in JavaScript?', 'Refers to the current object', 'MCQ'),
		(66, 'Which of these is a keyword in C programming?', 'int', 'MCQ'),
		(67, 'Which data structure allows fast insertion and deletion from both ends?', 'Deque', 'MCQ'),
		(68, 'Is Python a compiled language?', 'False', 'True&False'),
		(69, 'What does CSS stand for?', 'Cascading Style Sheets', 'MCQ'),
		(70, 'Which programming language is used for iOS development?', 'Swift', 'MCQ'),
		(71, 'Is the Java Virtual Machine platform-independent?', 'True', 'True&False'),
		(72, 'Which of the following is used to design the structure of a database?', 'SQL', 'MCQ'),
		(73, 'What does HTTP stand for?', 'HyperText Transfer Protocol', 'MCQ'),
		(74, 'Which of these is an example of an interpreted language?', 'Python', 'MCQ'),
		(75, 'What is the main use of Git?', 'Version control', 'MCQ'),
		(76, 'Is Linux an operating system?', 'True', 'True&False'),
		(77, 'Which of the following is not a relational database management system?', 'MongoDB', 'MCQ'),
		(78, 'What does CRUD stand for in database terminology?', 'Create, Read, Update, Delete', 'MCQ'),
		(79, 'What is a deadlock in programming?', 'A situation where two processes are stuck waiting for each other', 'MCQ'),
		(80, 'Which of the following is the best sorting algorithm for large datasets?', 'Merge Sort', 'MCQ'),
		(81, 'Which of the following is the main use of a linked list?', 'Dynamic memory allocation', 'MCQ'),
		(82, 'Which of these is not a correct way to declare an array in C?', 'int array[10]', 'MCQ'),
		(83, 'What is the default value of an integer in Java?', '0', 'MCQ'),
		(84, 'Which of these is the correct syntax to create a function in Python?', 'def my_function():', 'MCQ'),
		(85, 'Is a class in object-oriented programming a template for creating objects?', 'True', 'True&False'),
		(86, 'Which is the main advantage of using recursion in programming?', 'Simplifies complex problems', 'MCQ'),
		(87, 'What is the main use of a queue data structure?', 'FIFO operations', 'MCQ'),
		(88, 'Which programming language uses the concept of "callbacks" most commonly?', 'JavaScript', 'MCQ'),
		(89, 'Is Swift a modern programming language?', 'True', 'True&False'),
		(90, 'Which of the following is used to handle exceptions in Java?', 'try-catch', 'MCQ'),
		(91, 'Which data structure uses FIFO (First In, First Out)?', 'Queue', 'MCQ'),
		(92, 'Is the Python "list" mutable?', 'True', 'True&False'),
		(93, 'Which of the following is a valid Python data type?', 'Tuple', 'MCQ'),
		(94, 'Is a binary tree a type of data structure?', 'True', 'True&False'),
		(95, 'Which of these is not a type of loop in Python?', 'Do-Until', 'MCQ'),
		(96, 'Which sorting algorithm has a worst-case time complexity of O(n log n)?', 'Merge Sort', 'MCQ'),
		(97, 'Which of these is used to handle memory management in C?', 'malloc()', 'MCQ'),
		(98, 'What is a static variable in C programming?', 'A variable that retains its value between function calls', 'MCQ'),
		(99, 'Which of the following is an example of a functional programming language?', 'Haskell', 'MCQ'),
		(100, 'Is the `print()` function in Python used to output data to the console?', 'True', 'True&False');

-- #INSERT Question_Type Exam Table --
INSERT INTO Question_Type
VALUES	(1, 'True', 'False', NULL, NULL),
		(2, 'Paris', 'London', 'Berlin', 'Rome'),
		(3, 'True', 'False', NULL, NULL),
		(4, 'C', 'Java', 'Python', 'Ruby'),
		(5, 'True', 'False', NULL, NULL),
		(6, 'True', 'False', NULL, NULL),
		(7, 'JavaScript', 'HTML', 'Python', 'CSS'),
		(8, 'True', 'False', NULL, NULL),
		(9, 'HTML', 'CSS', 'JavaScript', 'PHP'),
		(10, 'True', 'False', NULL, NULL),
		(11, 'Java', 'Python', 'JavaScript', 'C#'),
		(12, 'True', 'False', NULL, NULL),
		(13, 'C', 'Java', 'Python', 'Ruby'),
		(14, 'True', 'False', NULL, NULL),
		(15, 'CSS', 'JavaScript', 'HTML', 'PHP'),
		(16, 'True', 'False', NULL, NULL),
		(17, 'SQL', 'NoSQL', 'GraphQL', 'REST'),
		(18, 'True', 'False', NULL, NULL),
		(19, 'Kotlin', 'Swift', 'Dart', 'Java'),
		(20, 'True', 'False', NULL, NULL),
		(21, 'Cascading Style Sheets', 'Cascading Scripting Style', 'Cascading Simple Sheets', 'Cascading Syntax Styles'),
		(22, 'Python', 'Java', 'C++', 'R'),
		(23, 'True', 'False', NULL, NULL),
		(24, 'HTML', 'JavaScript', 'C#', 'PHP'),
		(25, 'True', 'False', NULL, NULL),
		(26, 'Object-Oriented Programming', 'Open Object Programming', 'Optimized Object Programming', 'Ordered Object Programming'),
		(27, 'Python', 'Java', 'C#', 'Ruby'),
		(28, 'True', 'False', NULL, NULL),
		(29, 'Queue', 'Stack', 'Array', 'Linked List'),
		(30, 'To store data in Last In, First Out order', 'To store data in First In, First Out order', 'To store data in order of size', 'To store data in priority order'),
		(31, 'Immutability', 'State Mutation', 'Side Effects', 'Recursion'),
		(32, 'True', 'False', NULL, NULL),
		(33, 'Assembly', 'Python', 'Java', 'C++'),
		(34, 'Python', 'JavaScript', 'Java', 'Ruby'),
		(35, 'True', 'False', NULL, NULL),
		(36, 'JavaScript', 'Python', 'Java', 'C#'),
		(37, 'True', 'False', NULL, NULL),
		(38, 'QuickSort', 'MergeSort', 'BubbleSort', 'SelectionSort'),
		(39, 'Hash Table', 'Array', 'Stack', 'Queue'),
		(40, 'True', 'False', NULL, NULL),
		(41, 'HTML', 'CSS', 'JavaScript', 'SQL'),
		(42, 'JavaScript', 'PHP', 'Java', 'C++'),
		(43, 'True', 'False', NULL, NULL),
		(44, 'Manage hardware and software resources', 'Build web applications', 'Run machine learning models', 'Control user inputs'),
		(45, 'Interpreted', 'Compiled', NULL, NULL),
		(46, 'Integrated Development Environment', 'Internal Development Environment', 'Intelligent Development Engine', 'Initial Design Environment'),
		(47, 'C', 'C++', 'Python', 'Ruby'),
		(48, 'Variable', 'Constant', 'Array', 'Function'),
		(49, 'Stack', 'Queue', 'Linked List', 'Array'),
		(50, 'Imperative', 'Declarative', 'Functional', 'Object-Oriented'),
		(51, 'True', 'False', NULL, NULL),
		(52, 'Java', 'Swift', 'Objective-C', 'Python'),
		(53, 'True', 'False', NULL, NULL),
		(54, 'len()', 'length()', 'getLength()', 'size()'),
		(55, 'Node.js', 'Python', 'Java', 'Ruby'),
		(56, 'Application Programming Interface', 'Active Programming Interface', 'Automated Programming Interface', 'Application Protocol Interface'),
		(57, 'Python', 'Java', 'C', 'Ruby'),
		(58, 'Requirement gathering', 'Designing', 'Implementation', 'Testing'),
		(59, 'True', 'False', NULL, NULL),
		(60, 'Merge Sort', 'Quick Sort', 'Bubble Sort', 'Insertion Sort'),
		(61, 'Structured Query Language', 'Simple Query Language', 'Standard Query Language', 'System Query Language'),
		(62, 'Haskell', 'Scala', 'Python', 'Java'),
		(63, 'True', 'False', NULL, NULL),
		(64, 'Python', 'C#', 'JavaScript', 'Ruby'),
		(65, 'Refers to the current object', 'Defines the class', 'Starts the function', 'Assigns a value to the object'),
		(66, 'int', 'float', 'char', 'double'),
		(67, 'Deque', 'Stack', 'Queue', 'Array'),
		(68, 'True', 'False', NULL, NULL),
		(69, 'Cascading Style Sheets', 'Cascading Syntax Sheets', 'Custom Style Sheets', 'Coded Style Sheets'),
		(70, 'Swift', 'Objective-C', 'Java', 'Kotlin'),
		(71, 'True', 'False', NULL, NULL),
		(72, 'SQL', 'NoSQL', 'HQL', 'MongoDB'),
		(73, 'HyperText Transfer Protocol', 'HyperText Translation Protocol', 'HyperText Transfer Program', 'Hyper Transfer Protocol'),
		(74, 'Python', 'C++', 'Java', 'Ruby'),
		(75, 'Version control', 'Package management', 'Configuration management', 'Task management'),
		(76, 'True', 'False', NULL, NULL),
		(77, 'MongoDB', 'MySQL', 'PostgreSQL', 'SQLite'),
		(78, 'Create, Read, Update, Delete', 'Connect, Read, Update, Delete', 'Create, Render, Upload, Delete', 'Connect, Read, Upload, Delete'),
		(79, 'A situation where two processes are stuck waiting for each other', 'A situation where a process crashes', 'A situation where a process is delayed', 'A situation where memory is overused'),
		(80, 'Merge Sort', 'Quick Sort', 'Bubble Sort', 'Insertion Sort'),
		(81, 'Dynamic memory allocation', 'Static memory allocation', 'Indexing', 'Recursive calls'),
		(82, 'int array[10];', 'int[10] array;', 'array[10] int;', 'array int[10];'),
		(83, '0', 'null', 'undefined', 'NaN'),
		(84, 'def my_function():', 'function my_function()', 'func my_function()', 'create my_function()'),
		(85, 'True', 'False', NULL, NULL),
		(86, 'Simplifies complex problems', 'Requires more memory', 'Takes longer execution time', 'Does not work with large datasets'),
		(87, 'FIFO operations', 'LIFO operations', 'Access random elements', 'Store elements in an array'),
		(88, 'JavaScript', 'Python', 'C++', 'Java'),
		(89, 'True', 'False', NULL, NULL),
		(90, 'try-catch', 'try-finally', 'throw-catch', 'catch-finally'),
		(91, 'Queue', 'Stack', 'Linked List', 'Array'),
		(92, 'True', 'False', NULL, NULL),
		(93, 'Tuple', 'List', 'Dictionary', 'String'),
		(94, 'True', 'False', NULL, NULL),
		(95, 'Do-Until', 'While', 'For', 'Foreach'),
		(96, 'Merge Sort', 'Bubble Sort', 'Selection Sort', 'Quick Sort'),
		(97, 'malloc()', 'free()', 'realloc()', 'new()'),
		(98, 'A variable that retains its value between function calls', 'A variable that is only local to the function', 'A variable that can only be used in the main function', 'A variable that automatically resets to zero'),
		(99, 'Haskell', 'Java', 'C++', 'Python'),
		(100, 'True', 'False', NULL, NULL);

-- #INSERT Ins_Course Exam Table --
INSERT INTO Ins_Course
VALUES	(1, 5),
		(2, 12),
		(3, 18),
		(4, 7),
		(5, 1),
		(16, 14),
		(17, 19),
		(8, 3),
		(9, 8),
		(10, 20),
		(11, 15),
		(12, 6),
		(13, 2),
		(18, 19),
		(15, 21),
		(16, 4),
		(17, 11),
		(18, 13),
		(19, 22),
		(20, 10),
		(21, 30),
		(1, 17),
		(2, 23),
		(3, 25),
		(4, 28),
		(5, 18),
		(6, 14),
		(7, 19),
		(8, 1),
		(9, 20),
		(10, 16),
		(11, 13),
		(12, 22),
		(13, 30),
		(11, 25),
		(15, 8),
		(16, 21),
		(17, 12),
		(18, 9),
		(19, 5),
		(20, 24),
		(21, 11),
		(1, 27),
		(2, 30),
		(3, 19),
		(4, 6),
		(5, 23),
		(6, 28),
		(7, 18),
		(8, 16),
		(9, 9),
		(10, 13);
-- #INSERT Std_course Exam Table --
INSERT INTO Std_course(crs_id, std_id, enroll_date)
VALUES	(1, 1, '2024-10-01'),
		(2, 5, '2024-10-02'),
		(3, 10, '2024-10-03'),
		(4, 12, '2024-10-05'),
		(5, 15, '2024-10-06'),
		(6, 20, '2024-10-07'),
		(7, 25, '2024-10-08'),
		(8, 30, '2024-10-09'),
		(9, 35, '2024-10-10'),
		(10, 55, '2024-10-11'),
		(11, 45, '2024-10-12'),
		(12, 50, '2024-10-13'),
		(13, 55, '2024-10-14'),
		(14, 60, '2024-10-15'),
		(15, 65, '2024-10-16'),
		(16, 2, '2024-10-17'),
		(17, 3, '2024-10-18'),
		(18, 6, '2024-10-19'),
		(19, 8, '2024-10-20'),
		(20, 10, '2024-10-21'),
		(21, 12, '2024-10-22'),
		(1, 13, '2024-10-23'),
		(2, 14, '2024-10-24'),
		(3, 16, '2024-10-25'),
		(4, 18, '2024-10-26'),
		(5, 20, '2024-10-27'),
		(6, 22, '2024-10-28'),
		(7, 24, '2024-10-29'),
		(8, 26, '2024-10-30'),
		(9, 28, '2024-10-31'),
		(10, 30, '2024-11-01'),
		(11, 32, '2024-11-02'),
		(12, 34, '2024-11-03'),
		(13, 36, '2024-11-04'),
		(14, 38, '2024-11-05'),
		(15, 43, '2024-11-06'),
		(16, 42, '2024-11-07'),
		(17, 44, '2024-11-08'),
		(18, 46, '2024-11-09'),
		(19, 48, '2024-11-10'),
		(20, 50, '2024-11-11'),
		(21, 52, '2024-11-12'),
		(1, 54, '2024-11-13'),
		(2, 56, '2024-11-14'),
		(3, 58, '2024-11-15'),
		(4, 60, '2024-11-16'),
		(5, 62, '2024-11-17'),
		(6, 64, '2024-11-18'),
		(7, 1, '2024-11-19'),
		(8, 3, '2024-11-20'),
		(9, 5, '2024-11-21'),
		(10, 7, '2024-11-22'),
		(11, 9, '2024-11-23'),
		(12, 11, '2024-11-24'),
		(13, 13, '2024-11-25'),
		(14, 15, '2024-11-26'),
		(15, 17, '2024-11-27'),
		(16, 19, '2024-11-28'),
		(17, 21, '2024-11-29'),
		(18, 23, '2024-11-30'),
		(19, 25, '2024-12-01'),
		(20, 27, '2024-12-02'),
		(21, 29, '2024-12-03'),
		(1, 31, '2024-12-04'),
		(2, 33, '2024-12-05'),
		(3, 35, '2024-12-06'),
		(4, 37, '2024-12-07'),
		(5, 39, '2024-12-08'),
		(6, 41, '2024-12-09'),
		(7, 43, '2024-12-10'),
		(8, 45, '2024-12-11'),
		(9, 47, '2024-12-12'),
		(10, 49, '2024-12-13'),
		(11, 51, '2024-12-14'),
		(12, 53, '2024-12-15'),
		(13, 65, '2024-12-16'),
		(14, 57, '2024-12-17'),
		(15, 59, '2024-12-18'),
		(16, 61, '2024-12-19'),
		(17, 63, '2024-12-20'),
		(18, 65, '2024-12-21');

-- #INSERT Std_exam Exam Table --
INSERT INTO Std_exam
VALUES	(1, 1, 95, '2023-10-01'),
		(2, 2, 88, '2023-10-02'),
		(3, 3, 92, '2023-10-03'),
		(4, 4, 78, '2023-10-04'),
		(5, 5, 70, '2023-10-05'),
		(6, 6, 96, '2023-10-06'),
		(7, 7, 65, '2023-10-07'),
		(8, 8, 60, '2023-10-08'),
		(9, 9, 98, '2023-10-09'),
		(10, 10, 75, '2023-10-10'),
		(11, 11, 69, '2023-10-11'),
		(12, 12, 84, '2023-10-12'),
		(13, 13, 91, '2023-10-13'),
		(14, 14, 58, '2023-10-14'),
		(15, 15, 77, '2023-10-15'),
		(16, 16, 93, '2023-10-16'),
		(17, 17, 62, '2023-10-17'),
		(18, 18, 94, '2023-10-18'),
		(19, 19, 59, '2023-10-19'),
		(20, 20, 81, '2023-10-20'),
		(1, 21, 89, '2023-10-21'),
		(2, 22, 74, '2023-10-22'),
		(3, 23, 68, '2023-10-23'),
		(4, 24, 90, '2023-10-24'),
		(5, 25, 83, '2023-10-25'),
		(6, 26, 86, '2023-10-26'),
		(7, 27, 56, '2023-10-27'),
		(8, 28, 64, '2023-10-28'),
		(9, 29, 93, '2023-10-29'),
		(10, 30, 80, '2023-10-30'),
		(11, 31, 55, '2023-10-31'),
		(12, 32, 87, '2023-11-01'),
		(13, 33, 73, '2023-11-02'),
		(14, 34, 67, '2023-11-03'),
		(15, 35, 91, '2023-11-04'),
		(16, 36, 79, '2023-11-05'),
		(17, 37, 85, '2023-11-06'),
		(18, 38, 66, '2023-11-07'),
		(19, 39, 92, '2023-11-08'),
		(20, 65, 57, '2023-11-09'),
		(1, 41, 82, '2023-11-10'),
		(2, 42, 88, '2023-11-11'),
		(3, 43, 72, '2023-11-12'),
		(4, 44, 95, '2023-11-13'),
		(5, 45, 69, '2023-11-14'),
		(6, 46, 63, '2023-11-15'),
		(7, 47, 99, '2023-11-16'),
		(8, 48, 74, '2023-11-17'),
		(9, 49, 61, '2023-11-18'),
		(10, 50, 84, '2023-11-19'),
		(11, 51, 78, '2023-11-20'),
		(12, 52, 93, '2023-11-21'),
		(13, 53, 71, '2023-11-22'),
		(14, 54, 76, '2023-11-23'),
		(15, 55, 85, '2023-11-24'),
		(16, 56, 60, '2023-11-25'),
		(17, 57, 96, '2023-11-26'),
		(18, 58, 80, '2023-11-27'),
		(19, 59, 66, '2023-11-28'),
		(20, 60, 83, '2023-11-29'),
		(1, 61, 64, '2023-11-30'),
		(2, 62, 68, '2023-12-01'),
		(3, 63, 94, '2023-12-02'),
		(4, 64, 79, '2023-12-03'),
		(5, 65, 59, '2023-12-04'),
		(6, 1, 85, '2023-12-05'),
		(7, 2, 75, '2023-12-06'),
		(8, 3, 70, '2023-12-07'),
		(9, 4, 91, '2023-12-08'),
		(10, 5, 62, '2023-12-09'),
		(11, 6, 97, '2023-12-10'),
		(12, 7, 58, '2023-12-11'),
		(13, 8, 80, '2023-12-12'),
		(14, 9, 84, '2023-12-13'),
		(15, 10, 77, '2023-12-14'),
		(16, 11, 65, '2023-12-15'),
		(17, 12, 98, '2023-12-16'),
		(18, 13, 60, '2023-12-17'),
		(19, 14, 72, '2023-12-18'),
		(20, 15, 93, '2023-12-19'),
		(1, 16, 76, '2023-12-20'),
		(2, 17, 88, '2023-12-21'),
		(3, 18, 71, '2023-12-22'),
		(1, 19, 92, '2023-12-23'),
		(2, 20, 85, '2023-12-24'),
		(3, 21, 75, '2023-12-25'),
		(4, 22, 79, '2023-12-26'),
		(5, 23, 88, '2023-12-27'),
		(6, 24, 95, '2023-12-28'),
		(7, 25, 61, '2023-12-29'),
		(8, 26, 70, '2023-12-30'),
		(9, 27, 84, '2023-12-31'),
		(10, 28, 77, '2023-12-01'),
		(11, 29, 80, '2023-12-02'),
		(12, 30, 68, '2023-12-03'),
		(13, 31, 90, '2023-12-04'),
		(14, 32, 79, '2023-12-05'),
		(15, 33, 87, '2023-12-06'),
		(16, 34, 68, '2023-12-07'),
		(17, 35, 92, '2023-12-08'),
		(18, 36, 85, '2023-12-09'),
		(19, 37, 63, '2023-12-10'),
		(20, 38, 76, '2023-12-11');

-- #INSERT Std_exam Exam Table --
INSERT INTO Ques_Exam
VALUES	(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), 
		(1, 6), (1, 7), (1, 8), (1, 9), (1, 10),
		(2, 11), (2, 12), (2, 13), (2, 14), (2, 15),
		(2, 16), (2, 17), (2, 18), (2, 19), (2, 20),
		(3, 21), (3, 22), (3, 23), (3, 24), (3, 25),
		(3, 26), (3, 27), (3, 28), (3, 29), (3, 30),
		(4, 31), (4, 32), (4, 33), (4, 34), (4, 35),
		(4, 36), (4, 37), (4, 38), (4, 39), (4, 40),
		(5, 41), (5, 42), (5, 43), (5, 44), (5, 45),
		(5, 46), (5, 47), (5, 48), (5, 49), (5, 50),
		(6, 51), (6, 52), (6, 53), (6, 54), (6, 55),
		(6, 56), (6, 57), (6, 58), (6, 59), (6, 60),
		(7, 61), (7, 62), (7, 63), (7, 64), (7, 65),
		(7, 66), (7, 67), (7, 68), (7, 69), (7, 70),
		(8, 71), (8, 72), (8, 73), (8, 74), (8, 75),
		(8, 76), (8, 77), (8, 78), (8, 79), (8, 80),
		(9, 81), (9, 82), (9, 83), (9, 84), (9, 85),
		(9, 86), (9, 87), (9, 88), (9, 89), (9, 90),
		(10, 91), (10, 92), (10, 93), (10, 94), (10, 95),
		(10, 96), (10, 97), (10, 98), (10, 99), (10, 100);

-- #INSERT Std_ExamAnswer Exam Table --
INSERT INTO Std_ExamAnswer(exam_id, std_id, ques_id, Std_Answer)
VALUES  (1, 1, 1, 'a'), (1, 3, 3, 'a'),
		(1, 4, 4, 'True'), (1, 5, 5, 'c'),
		(2, 6, 6, 'd'), (2, 7, 7, 'b'), 
		(2, 8, 8, 'True'), (2, 9, 9, 'a'), (2, 10, 10, 'c'),
		(3, 11, 11, 'b'), (3, 12, 12, 'False'),
		(3, 13, 13, 'a'), (3, 14, 14, 'd'), (3, 15, 15, 'c'),
		(4, 16, 16, 'True'), (4, 17, 17, 'a'),
		(4, 18, 18, 'b'), (4, 19, 19, 'd'), (4, 20, 20, 'c'),
		(5, 21, 21, 'False'), (5, 22, 22, 'a'),
		(5, 23, 23, 'd'), (5, 24, 24, 'b'), (5, 25, 25, 'True'),
		(6, 26, 26, 'c'), (6, 27, 27, 'b'),
		(6, 28, 28, 'a'), (6, 29, 29, 'False'), (6, 30, 30, 'd'),
		(7, 31, 31, 'True'), (7, 32, 32, 'a'),
		(7, 33, 33, 'b'), (7, 34, 34, 'c'), (7, 35, 35, 'False'),
		(8, 36, 36, 'a'), (8, 37, 37, 'd'),
		(8, 38, 38, 'True'), (8, 39, 39, 'b'), (8, 45, 40, 'c'),
		(9, 41, 41, 'False'), (9, 42, 42, 'a'),
		(9, 43, 43, 'd'), (9, 44, 44, 'True'), (9, 45, 45, 'c'),
		(10, 46, 46, 'b'), (10, 47, 47, 'True'),
		(10, 48, 48, 'False'), (10, 49, 49, 'a'), (10, 50, 50, 'c'),
		(11, 51, 51, 'd'), (11, 52, 52, 'True'), (11, 53, 53, 'False'),
		(11, 54, 54, 'b'), (11, 55, 55, 'a'),
		(12, 56, 56, 'c'), (12, 57, 57, 'd'), (12, 58, 58, 'True'),
		(12, 59, 59, 'a'), (12, 60, 60, 'False'),
		(13, 61, 61, 'b'), (13, 62, 62, 'c'), (13, 63, 63, 'a'),
		(13, 64, 64, 'd'), (13, 65, 65, 'True'),
		(14, 1, 66, 'False'), (14, 2, 67, 'a'), (14, 3, 68, 'b'),
		(14, 4, 69, 'd'), (14, 5, 70, 'c'),
		(15, 6, 71, 'True'), (15, 7, 72, 'False'), (15, 8, 73, 'a'),
		(15, 9, 74, 'c'), (15, 10, 75, 'b'),
		(16, 11, 76, 'True'), (16, 12, 77, 'False'), (16, 13, 78, 'a'),
		(16, 14, 79, 'b'), (16, 15, 80, 'c'),
		(17, 16, 81, 'a'), (17, 17, 82, 'False'), (17, 18, 83, 'b'),
		(17, 19, 84, 'c'), (17, 20, 85, 'True'),
		(18, 21, 86, 'a'), (18, 22, 87, 'd'), (18, 23, 88, 'True'),
		(18, 24, 89, 'b'), (18, 25, 90, 'False'),
		(19, 26, 91, 'a'), (19, 27, 92, 'b'),
		(19, 28, 93, 'True'), (19, 29, 94, 'False'), (19, 30, 95, 'c'),
		(20, 31, 96, 'd'), (20, 32, 97, 'True'),
		(20, 33, 98, 'a'), (20, 34, 99, 'c'), (20, 35, 100, 'b'),
		(1, 2, 2, 'c'), (5, 59, 94, 'False'), (5, 60, 100, 'b');
